/* LeaguePage.css */

/* Heading Styles */
.creative-heading {
  font-size: 1.5rem;
  color: #3b82f6; /* Blue color */
  margin-bottom: 1rem;
  text-align: center;
  font-weight: bold;
}

/* Card Styles */
.creative-edit-card {
  background: rgba(18, 18, 21, 0.9);
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  padding: 20px;
  transition: transform 0.3s ease;
  overflow: hidden !important; /* Prevent any scrolling inside the card */
  touch-action: none; /* Disable touch scrolling */
}

.creative-edit-card:hover {
  transform: translateY(-5px);
}

/* Teams Editor Styles */
.teams-editor {
  display: flex;
  flex-direction: column;
  gap: 15px; /* Space between inputs */
  align-items: center; /* Add this line to center items horizontally */
}

/* Team Input Container Styles */
.team-input-container {
  position: relative;
  width: 100%; /* Ensure it takes full width of its parent */
  max-width: 300px; /* Set a max-width for the input container */
  margin: 0 auto; /* Center the input container itself */
}

.league-title {
  text-align: center;          /* Center horizontally */
  font-weight: 900;            /* Heavy, bold text */
  font-size: 2.8rem;           /* Big and clear */
  color: #3b82f6;              /* Modern blue */
  text-shadow: none; /* glowing blue shadow */
  letter-spacing: 0.05em;      /* Slight spacing between letters */
  margin: 1.5rem 0 2rem 0;     /* vertical spacing */
  font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* modern font */
  user-select: none;           /* Prevent accidental selection */
  transition: color 0.3s ease;
  cursor: default;
}

.league-title:hover {
  color: #3b82f6;              /* Slightly darker blue on hover */
  text-shadow: 0 4px 20px rgba(12, 12, 12, 0.8);
  transform: scale(1.05);
}

/* Input Styles */
.team-name-input {
  width: 100%;
  padding: 12px 15px;
  border: 2px solid #3b82f6; /* Blue border */
  border-radius: 8px;
  font-size: 1rem;
  transition: border-color 0.3s ease;
}

.team-name-input:focus {
  border-color: #1d4ed8; /* Darker blue on focus */
  outline: none;
  box-shadow: 0 0 5px rgba(59, 130, 246, 0.5);
}

/* Action Buttons - Modern Glass Style */
.action-buttons {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 16px;
  margin: 24px 0;
  padding: 0 16px;
}

/* Button Base Style */
.glass-button {
  --button-size: 56px;
  width: var(--button-size);
  height: var(--button-size);
  border: none;
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.12);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  box-shadow: 
    0 2px 8px rgba(0, 0, 0, 0.1),
    0 0 0 1px rgba(255, 255, 255, 0.1);
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.1);
}

/* Button Icon */
.glass-button svg {
  color: #3b82f6;
  font-size: 1.5rem;
  transition: all 0.3s ease;
}

/* Hover Effects */
.glass-button:hover {
  transform: translateY(-2px) scale(1.05);
  background: rgba(255, 255, 255, 0.18);
  box-shadow: 
    0 4px 16px rgba(59, 130, 246, 0.2),
    0 0 0 1px rgba(255, 255, 255, 0.15);
}

.glass-button:hover svg {
  color: #1d4ed8;
  transform: scale(1.1);
}

/* Active/Pressed Effect */
.glass-button:active {
  transform: translateY(1px) scale(0.98);
}

/* Ripple Effect */
.glass-button::after {
  content: '';
  position: absolute;
  border-radius: 50%;
  background: rgba(59, 130, 246, 0.4);
  width: 100%;
  height: 100%;
  animation: ripple 0.6s linear;
  opacity: 0;
}

.glass-button:active::after {
  animation: ripple 0.6s linear;
}

@keyframes ripple {
  from {
    transform: scale(0);
    opacity: 1;
  }
  to {
    transform: scale(1.5);
    opacity: 0;
  }
}

/* Mobile Responsiveness */
@media (max-width: 480px) {
  .teams-editor {
     height: 25vh; /* Full height of the viewport */
    overflow-y: auto; /* Enable vertical scrolling */
  }

  .action-buttons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 12px;
  }

  .action-buttons > button:not(.end-league-btn) {
    flex: 1 1 45%;
    max-width: 120px;
  }

  .action-buttons > .end-league-btn {
    flex: 1 1 100%;
    max-width: 120px;
    margin-top: 1px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .glass-button {
    --button-size: 52px;
  }
  
  .glass-button svg {
    font-size: 1.3rem;
  }
  /* Make the card fit mobile width and prevent horizontal scroll */
  .creative-edit-card {
    width: 100%;
    max-width: 100vw;
    box-sizing: border-box;
    overflow-x: hidden;
    
  }

  /* Ensure body or main container does not scroll horizontally */
  body, html, #root {
    overflow-x: hidden;
    width: 100vw;
  }
}


/* Tab Content */
.tab-content {
  padding: 2rem;
  background: var(--background, rgba(255, 255, 255, 0.1));
  border-radius: 18px;
  margin: 1rem 0;
  animation: fadeIn 0.7s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow:
    0 10px 30px rgba(0, 0, 0, 0.2),
    0 0 0 1px rgba(255, 255, 255, 0.05),
    inset 0 0 15px rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(25px);
  -webkit-backdrop-filter: blur(25px);
  border: 1px solid rgba(255, 255, 255, 0.18);
  transition: background 0.3s ease;
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.tab-content::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    to bottom right,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.03) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  transform: rotate(30deg);
  animation: shine 6s infinite linear;
}

.tab-content:hover {
  box-shadow:
    0 15px 40px rgba(0, 150, 255, 0.25),
    inset 0 0 20px rgba(255, 255, 255, 0.2);
  transform: translateY(-5px);
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Team Input Styling */
.team-input {
  margin: 1rem 0;
}

.team-name-input {
  width: 100%;
  max-width: 300px;
  padding: 0.8rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  background: rgba(0, 0, 0, 0.4);
  color: white;
  font-size: 1rem;
  transition: all 0.3s ease;
}

.team-name-input:focus {
  outline: none;
  border-color: #64dcff;
  box-shadow: 0 0 0 3px rgba(100, 220, 255, 0.2);
}

/* Buttons */
.action-buttons {
  display: flex;
  gap: 1rem;
  margin: 2rem 0;
  justify-content: center;
  perspective: 1000px;
}

.print-btn, .reset-btn {
  padding: 0.8rem 1.5rem;
  border: none;
  border-radius: 12px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.2rem;
  box-shadow:
    0 0 10px rgba(100, 220, 255, 0.7),
    0 0 20px rgba(100, 220, 255, 0.5);
  background: rgba(100, 220, 255, 0.15);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(100, 220, 255, 0.4);
  transform-style: preserve-3d;
  transform-origin: center;
  animation: neonPulse 3s ease-in-out infinite alternate;
  position: relative;
  overflow: hidden;
}

.print-btn {
  background: linear-gradient(45deg, #6a11cb, #2575fc);
}

.reset-btn {
  background: linear-gradient(45deg, #ff416c, #ff4b2b);
  animation-delay: 1.5s;
}

.print-btn:hover, .reset-btn:hover {
  transform: scale(1.1) rotateY(15deg);
  box-shadow: 0 0 20px #8e2de2, 0 0 40px #4a00e0;
  outline: none;
}

/* New Dynamic Toggle Styles */
@import url('https://unpkg.com/normalize.css') layer(normalize);

@layer normalize, base, demo, flip, debug;

@layer debug {
  [data-debug='true'] input.sr-only {
    position: absolute;
    width: 20px;
    height: 20px;
    padding: 0;
    margin: unset;
    overflow: visible;
    clip: unset;
    white-space: nowrap;
    border-width: unset;
    accent-color: red;
    outline: none;
    cursor: pointer;
    animation: reveal calc(var(--duration) * 1s) ease-out;
  }

  @keyframes reveal {
    0% {
      opacity: 0;
    }
  }

  [data-debug='true'] .control__track > input {
    left: 25%;
    bottom: 200%;
    translate: -50% 0;
  }
  [data-debug='true'] .premium > input:nth-of-type(1) {
    left: 25%;
    bottom: calc(200% + 2px);
    translate: -50% 0;
  }
  [data-debug='true'] .premium > input:nth-of-type(2) {
    left: 75%;
    bottom: calc(200% + 2px);
    translate: -50% 0;
  }
}

@layer flip {
:root {
    --shadow-color: 0deg 0% 63%;
    --primary: #1e293b;
    --secondary: #64748b;
    --inactive: #94a3b8;
    --duration: 0.22;
    --drop-off: 0.4;
    --ease: ease-out;
    --ease: linear(
      0 0%, 0.2342 12.49%, 0.4374 24.99%,
      0.6093 37.49%, 0.6835 43.74%,
      0.7499 49.99%, 0.8086 56.25%,
      0.8593 62.5%, 0.9023 68.75%, 0.9375 75%,
      0.9648 81.25%, 0.9844 87.5%,
      0.9961 93.75%, 1 100%
    );
    --border: #cbd5e1;
  }
  [data-theme='dark'] {
    --primary: #0f172a;
    --secondary: #1e293b;
    --background: rgba(15, 23, 42, 0.8);
    --text-color: #cbd5e1;
    --glow-color: #3b82f6;
    --shadow-color: 0deg 0% 0%;
  }
  [data-theme='light'] {
    --primary: #e0e7ff;
    --secondary: #a5b4fc;
    --background: rgba(224, 231, 255, 0.8);
    --text-color: #1e293b;
    --glow-color: #6366f1;
    --shadow-color: 0deg 0% 63%;
  }
  .premium:has(:checked)::before {
    translate: -50% -250%;
    scale: 0.85;
  }
  .premium:has(:checked) label span {
    scale: 1;
  }
  .premium:has(:checked) .indicator {
    background: var(--secondary);
    clip-path: inset(0 0 0 0 round 100px);
  }
  .premium:has(:checked) label {
    color: var(--inactive);
    opacity: 0.75;
  }
  .premium:has(:nth-of-type(1):checked) label:nth-of-type(1),
  .premium:has(:nth-of-type(2):checked) label:nth-of-type(2) {
    color: var(--primary);
    opacity: 1;
  }
  .premium:has(:nth-of-type(1):checked) .indicator {
    translate: -100% 0;
  }
  .premium:has(:nth-of-type(2):checked) .indicator {
    translate: 0 0;
  }

  .control label {
    transition-property: color, opacity;
    transition-duration: calc(var(--duration) * 1s);
    transition-timing-function: var(--ease);
  }

  .control__track:not(:has(> :checked)) > label {
    color: var(--primary);
    opacity: var(--drop-off);
  }
  .control__track:not(:has(> :checked)) > .indicator {
    translate: 100% 0;
  }
.indicator {
  transition: translate calc(var(--duration) * 1s) var(--ease);
  box-shadow:
    0 0 12px rgba(100, 220, 255, 0.7),
    inset 0 0 15px rgba(100, 220, 255, 0.5);
  background: rgba(100, 220, 255, 0.3);
  backdrop-filter: blur(10px);
  border-radius: 100px;
}

.premium .indicator {
  transition-property: translate, clip-path, background, box-shadow;
  transition-duration: calc(var(--duration) * 1s);
  transition-timing-function: var(--ease);
  clip-path: inset(
    73cqh calc(50% + 1px) calc(27cqh - 2px) calc(50% - 3px) round 100px
  );
}

.premium::before {
  transition-property: scale, translate;
  transition-duration: calc(var(--duration) * 1s);
  transition-timing-function: var(--ease);
}

.control__track:has(> :checked) .premium .indicator {
  background: var(--inactive);
  box-shadow: none;
}

.control__track:has(> :checked) .premium label {
  color: var(--inactive);
}
}

@layer demo {
  .indicator {
    position: absolute;
    width: 50%;
    left: 0;
    top: 0;
    bottom: 0;
    background: var(--primary);
    border-radius: 100px;
  }

  .premium .indicator {
    background: var(--primary);
    left: 50%;
    top: 0;
    translate: -50% 0;
  }

.control {
  scale: 1.2;
  letter-spacing: 0.5px;
  position: relative;
  width: 280px;
  height: 42px;
  aspect-ratio: 300 / 42;
  background: rgba(100, 220, 255, 0.1);
  border-radius: 100px;
  border: 1px solid rgba(100, 220, 255, 0.3);
  padding: 3px;
  box-shadow:
    0 4px 10px rgba(100, 220, 255, 0.4),
    inset 0 0 10px rgba(100, 220, 255, 0.3);
  margin: 2rem auto; /* Center the control */
  transition: box-shadow 0.4s ease, background 0.4s ease;
}

.control:hover {
  background: rgba(100, 220, 255, 0.15);
  box-shadow:
    0 6px 15px rgba(100, 220, 255, 0.6),
    inset 0 0 15px rgba(100, 220, 255, 0.4);
}

.control:focus-within {
  box-shadow:
    0 8px 20px rgba(100, 220, 255, 0.8),
    inset 0 0 20px rgba(100, 220, 255, 0.5);
}

  .control__track {
    display: grid;
    place-items: center;
    grid-template-columns: repeat(4, 1fr);
    width: 100%;
    height: 100%;
    position: relative;
  }

.premium::before {
  content: '+';
  position: absolute;
  left: 50%;
  top: 50%;
  translate: -50% -50%;
  color: var(--primary);
  font-size: 3rem;
  z-index: 2;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}

label {
  display: inline-block;
  height: 100%;
  width: 100%;
  display: grid;
  place-items: center;
  cursor: pointer;
  font-size: 0.75rem;
  color: var(--primary);
  z-index: 2;
  text-align: center;
  justify-content: center;
  align-items: center;
}

  .control__track > label {
    color: var(--secondary);
  }

  .premium {
    width: 100%;
    height: 100%;
    display: grid;
    position: relative;
    grid-template-columns: 1fr 1fr;
    border: 1px solid #0000;
    container-type: size;
  }

  .premium,
  .control__track > label:nth-of-type(1) {
    grid-column: span 2;
  }

  label span {
    display: grid;
    place-items: center;
    height: 100%;
    width: 100%;
    transition: scale calc(var(--duration) * 1s) var(--ease);
  }

.premium label:nth-of-type(1) span {
    scale: 0.75;
    transform-origin: 150% 150%;
    border-radius: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #64dcff;
    transition: color 0.3s ease;
    filter: drop-shadow(0 0 4px #64dcff);
    cursor: pointer;
    font-size: 1.5rem;
  }
  .premium label:nth-of-type(1):hover span {
    color: #3bb0ff;
    filter: drop-shadow(0 0 6px #3bb0ff);
  }
  .premium label:nth-of-type(2) span {
    scale: 0.75;
    transform-origin: -65% 150%;
    border-radius: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #64dcff;
    transition: color 0.3s ease;
    filter: drop-shadow(0 0 4px #64dcff);
    cursor: pointer;
    font-size: 1.5rem;
  }
  .premium label:nth-of-type(2):hover span {
    color: #3bb0ff;
    filter: drop-shadow(0 0 6px #3bb0ff);
  }
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in hsl, canvasText, transparent 80%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        calc(var(--size) * 0.36) 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0%
        calc(var(--size) * 0.32) / var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  
}
